name: "Build and push images by using gradle"

on:
  push:
    branches:
      - 'main'
  release:
    types: [published]

env:
  REGISTRY: ghcr.io

jobs:
  build-and-push-image:
    name: Build and push images
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - image: ${{ github.repository }}-native-gradle
            file: build/docker/native-main/DockerfileNative
            context: build/docker/native-main
            build-layers: ./gradlew buildNativeLayers
            generate-dockerfile: ./gradlew dockerfileNative
          - image: ${{ github.repository }}-jvm-gradle
            file: build/docker/main/Dockerfile
            context: build/docker/main
            build-layers: ./gradlew buildLayers
            generate-dockerfile: ./gradlew dockerfile
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: 'microsoft'
          cache: gradle

      - name: Login container registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Builder docker layers
        run: ${{ matrix.build-layers }}

      - name: Generate dockerfile
        run: ${{ matrix.generate-dockerfile }}

      - name: Prepare application configuration
        run: ./gradlew dockerPrepareContext

      - name: Extract metadata (tags, labels)
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ matrix.image }}
          tags: |
            type=ref,event=branch
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}
            type=semver,pattern={{major}}.{{minor}}

      - name: Build and push image
        uses: docker/build-push-action@v3
        with:
          context: ${{ matrix.context }}
          file: ${{ matrix.file }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
